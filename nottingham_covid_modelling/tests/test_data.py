import os

import nottingham_covid_modelling.lib.data
import numpy as np
import pytest
from nottingham_covid_modelling import MODULE_DIR
from nottingham_covid_modelling.lib.data import DataLoader
from nottingham_covid_modelling.lib.settings import Params


GOOGLE_DATES = ['2020-02-15', '2020-02-16', '2020-02-17', '2020-02-18', '2020-02-19', '2020-02-20', '2020-02-21',
                '2020-02-22', '2020-02-23', '2020-02-24', '2020-02-25', '2020-02-26', '2020-02-27', '2020-02-28',
                '2020-02-29', '2020-03-01', '2020-03-02', '2020-03-03', '2020-03-04', '2020-03-05', '2020-03-06',
                '2020-03-07', '2020-03-08', '2020-03-09', '2020-03-10', '2020-03-11', '2020-03-12', '2020-03-13',
                '2020-03-14', '2020-03-15', '2020-03-16', '2020-03-17', '2020-03-18', '2020-03-19', '2020-03-20',
                '2020-03-21', '2020-03-22', '2020-03-23', '2020-03-24', '2020-03-25', '2020-03-26', '2020-03-27',
                '2020-03-28', '2020-03-29', '2020-03-30', '2020-03-31', '2020-04-01', '2020-04-02', '2020-04-03',
                '2020-04-04', '2020-04-05', '2020-04-06', '2020-04-07', '2020-04-08', '2020-04-09', '2020-04-10',
                '2020-04-11', '2020-04-12', '2020-04-13', '2020-04-14', '2020-04-15', '2020-04-16', '2020-04-17',
                '2020-04-18', '2020-04-19', '2020-04-20', '2020-04-21', '2020-04-22', '2020-04-23', '2020-04-24',
                '2020-04-25', '2020-04-26', '2020-04-27', '2020-04-28', '2020-04-29', '2020-04-30', '2020-05-01',
                '2020-05-02', '2020-05-03', '2020-05-04', '2020-05-05', '2020-05-06', '2020-05-07', '2020-05-08',
                '2020-05-09', '2020-05-10', '2020-05-11', '2020-05-12', '2020-05-13', '2020-05-14', '2020-05-15',
                '2020-05-16', '2020-05-17', '2020-05-18', '2020-05-19', '2020-05-20', '2020-05-21', '2020-05-22',
                '2020-05-23', '2020-05-24', '2020-05-25', '2020-05-26', '2020-05-27', '2020-05-28', '2020-05-29']

UK_DAILY_DEATHS = [2, 5, 3, 7, 11, 16, 19, 30, 47, 55, 68, 75, 111, 134, 175, 197, 247, 309, 385, 433, 470, 554, 
                   652, 764, 846, 929, 972, 1074, 1112, 1069, 1193, 1353, 1231, 1208, 1250, 1273, 1129, 1138, 1157, 
                   1197, 1171, 1079, 1015, 1036, 969, 984, 941, 913, 817, 795, 754, 727, 730, 694, 693, 622, 582, 
                   595, 567, 556, 562, 498, 479, 442, 376, 396, 394, 397, 376, 375, 330, 362, 328, 313, 300, 273, 
                   265, 254, 251, 275, 247, 257, 229]

UK_ALPHA_RAW = [0.92, 0.95, 0.92, 0.915, 0.91, 0.905, 0.91, 0.98, 1.01, 0.98, 1.01, 1.,
                1., 0.995, 0.99, 1.03, 1.005, 1., 0.995, 0.985, 1.01, 1., 1.015, 0.985,
                0.98, 0.97, 0.955, 0.935, 0.915, 0.9, 0.875, 0.785, 0.715, 0.68, 0.655, 0.645,
                0.62, 0.51, 0.39, 0.34, 0.32, 0.315, 0.345, 0.35, 0.29, 0.29, 0.29, 0.285,
                0.295, 0.355, 0.38, 0.29, 0.305, 0.3, 0.3, 0.225, 0.365, 0.355, 0.195, 0.305,
                0.31, 0.305, 0.305, 0.375, 0.425, 0.325, 0.33, 0.335, 0.335, 0.345, 0.42, 0.44,
                0.345, 0.315, 0.325, 0.325, 0.345, 0.44, 0.45, 0.36, 0.36, 0.375, 0.375, 0.275,
                0.45, 0.435, 0.37, 0.38, 0.385, 0.39, 0.4, 0.495, 0.53, 0.41, 0.42, 0.425,
                0.415, 0.415, 0.5, 0.56, 0.315, 0.43, 0.435, 0.435, 0.455]        

UK_ALPHA = [0.99998953, 0.99998548, 0.99997986, 0.99997207, 0.99996127, 0.99994628,
            0.99992551, 0.99989669, 0.99985673, 0.99980132, 0.99972449, 0.99961796,
            0.99947027, 0.99926553, 0.99898176, 0.99858856, 0.9980439,  0.99728978,
            0.99624634, 0.99480385, 0.99281214, 0.99006674, 0.98629127, 0.98111586,
            0.97405249, 0.96447003, 0.95157511, 0.93441089, 0.91189257, 0.88290508,
            0.8464876,  0.80210998, 0.74999879, 0.69140287, 0.62864247, 0.56718011,
            0.50905291, 0.45604988, 0.4101083,  0.37207751, 0.34186634, 0.31874804,
            0.30167706, 0.28953313, 0.28127146, 0.27599417, 0.27296954, 0.27162224,
            0.2715111,  0.27230371, 0.27375271, 0.27567566, 0.27793888, 0.28044485,
            0.28312266, 0.28592092, 0.28880238, 0.29174016, 0.29471482, 0.29771234,
            0.30072263, 0.30373841, 0.30675445, 0.30976699, 0.31277333, 0.31577156,
            0.31876029, 0.32173856, 0.32470567, 0.32766114, 0.33060465, 0.33353597,
            0.33645496, 0.33936153, 0.34225563, 0.34513724, 0.34800636, 0.35086301,
            0.35370721, 0.35653901, 0.35935843, 0.36216552, 0.36496034, 0.36774292,
            0.37051332, 0.37327159, 0.37601777, 0.37875193, 0.38147411, 0.38418436,
            0.38688274, 0.3895693,  0.39224408, 0.39490715, 0.39755854, 0.40019832,
            0.40282653, 0.40544323, 0.40804846, 0.41064227, 0.41322472, 0.41579585,
            0.41835572, 0.42090437, 0.42344185, 0.42596822, 0.42848351, 0.43098778,
            0.43348108, 0.43596346, 0.43843495, 0.44089562, 0.4433455,  0.44578465,
            0.44821312, 0.45063094, 0.45303816, 0.45543484, 0.45782102, 0.46019674,
            0.46256205, 0.464917,   0.46726163, 0.46959598, 0.47192011, 0.47423405,
            0.47653785, 0.47883156, 0.48111521, 0.48338887, 0.48565255, 0.48790632,
            0.49015021, 0.49238428, 0.49460855, 0.49682307, 0.49902789, 0.50122306,
            0.5034086,  0.50558456, 0.50775099, 0.50990793, 0.51205542, 0.51419349,
            0.5163222,  0.51844158, 0.52055168, 0.52265252, 0.52474417, 0.52682664,
            0.5289,     0.53096426, 0.53301948, 0.5350657,  0.53710295, 0.53913127,
            0.54115071, 0.5431613,  0.54516307, 0.54715608, 0.54914035, 0.55111593,
            0.55308285, 0.55504115, 0.55699087, 0.55893205, 0.56086473, 0.56278893,
            0.5647047,  0.56661208, 0.5685111,  0.5704018,  0.57228421, 0.57415838,
            0.57602433, 0.57788211, 0.57973175, 0.58157328, 0.58340674, 0.58523217,
            0.5870496,  0.58885907, 0.59066061, 0.59245425, 0.59424004, 0.596018,
            0.59778817, 0.59955058, 0.60130527, 0.60305227, 0.60479162, 0.60652334,
            0.60824748, 0.60996406, 0.61167312, 0.61337469, 0.61506881, 0.6167555,
            0.6184348,  0.62010675, 0.62177136, 0.62342869, 0.62507875, 0.62672158,
            0.62835721, 0.62998567, 0.631607,   0.63322123, 0.63482838, 0.63642849,
            0.63802159, 0.63960771, 0.64118688, 0.64275912, 0.64432448, 0.64588298,
            0.64743465, 0.64897952, 0.65051763, 0.65204899, 0.65357364, 0.65509161,
            0.65660293, 0.65810763, 0.65960574, 0.66109728, 0.66258228, 0.66406078,
            0.6655328,  0.66699837, 0.66845751, 0.66991027, 0.67135666, 0.67279671,
            0.67423045, 0.6756579,  0.67707911, 0.67849408]

NZ_DAILY_DEATHS = [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 0, 1, 4, 0, 0, 2, 0, 1, 0, 1, 1, 2, 1, 1, 0, 1, 0, 0, 0,
                    0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0]     

NZ_ALPHA_RAW = [1.06, 1.035, 1.23, 1.115, 1.125, 1.145, 1.135, 1.025, 1.015, 1.25, 1.125, 1.1400000000000001, 1.155,
                1.16, 1.04, 1.045, 1.25, 1.125, 1.125, 1.15, 1.1400000000000001, 1.045, 1.03, 1.21, 1.11, 1.115, 1.13,
                1.12, 1.02, 0.995, 1.165, 1.02, 1.0, 0.99, 0.945, 0.84, 0.78, 0.86, 0.585, 0.44999999999999996,
                0.20999999999999996, 0.20999999999999996, 0.265, 0.28500000000000003, 0.21999999999999997,
                0.19999999999999996, 0.20499999999999996, 0.20499999999999996, 0.20499999999999996, 0.28,
                0.29500000000000004, 0.22499999999999998, 0.20499999999999996, 0.20499999999999996, 0.20999999999999996,
                0.11499999999999999, 0.30000000000000004, 0.28, 0.13, 0.19499999999999995, 0.20499999999999996,
                0.20999999999999996, 0.20499999999999996, 0.29500000000000004, 0.30000000000000004, 0.235,
                0.21999999999999997, 0.22999999999999998, 0.235, 0.25, 0.31499999999999995, 0.345, 0.16000000000000003,
                0.4, 0.4, 0.42500000000000004, 0.43500000000000005, 0.505, 0.42500000000000004, 0.46499999999999997,
                0.41000000000000003, 0.43999999999999995, 0.43999999999999995, 0.44999999999999996, 0.5449999999999999,
                0.51, 0.485, 0.44999999999999996, 0.46499999999999997, 0.61, 0.62, 0.78, 0.725, 0.795, 0.72,
                0.6950000000000001, 0.7150000000000001, 0.73, 0.775, 0.6599999999999999, 0.755, 0.725, 0.735, 0.775, 0.755]

NZ_ALPHA = [0.99999991, 0.99999987, 0.9999998, 0.9999997, 0.99999955, 0.99999932,
            0.99999896, 0.99999843, 0.99999762, 0.9999964, 0.99999455, 0.99999175,
            0.99998751, 0.99998108, 0.99997136, 0.99995663, 0.99993434, 0.99990059,
            0.9998495, 0.99977215, 0.99965505, 0.99947781, 0.99920956, 0.99880368,
            0.99818972, 0.99726148, 0.99585912, 0.99374284, 0.99055457, 0.98576345,
            0.97859107, 0.96791494, 0.95215746, 0.92918855, 0.89630962, 0.85044643,
            0.78872682, 0.7095618, 0.6140453, 0.50695052, 0.40850228, 0.32296737,
            0.25009181, 0.19377518, 0.15437723, 0.12989814, 0.11734768, 0.11371031,
            0.11641811, 0.12348074, 0.13344162, 0.14527316, 0.15826763, 0.17194553,
            0.1859857, 0.20017506, 0.21437333, 0.22848904, 0.24246314, 0.25625816,
            0.26985088, 0.28322749, 0.29638038, 0.30930601, 0.3220035, 0.33447372,
            0.34671864, 0.35874095, 0.37054379, 0.38213055, 0.39350481, 0.40467019,
            0.41563036, 0.42638897, 0.43694965, 0.447316, 0.45749156, 0.46747981,
            0.4772842, 0.4869081, 0.49635481, 0.50562761, 0.5147297, 0.5236642,
            0.5324342, 0.54104275, 0.54949279, 0.55778726, 0.56592902, 0.57392088,
            0.58176559, 0.58946588, 0.59702439, 0.60444373, 0.61172648, 0.61887514,
            0.62589219, 0.63278004, 0.63954108, 0.64617763, 0.652692, 0.65908643,
            0.66536313, 0.67152426, 0.67757196, 0.68350832, 0.68933537, 0.69505515,
            0.70066961, 0.7061807, 0.71159033, 0.71690036, 0.72211262, 0.72722892,
            0.73225102, 0.73718065, 0.74201953, 0.74676931, 0.75143164, 0.75600814,
            0.76050037, 0.7649099, 0.76923824, 0.77348688, 0.77765731, 0.78175095,
            0.78576922, 0.78971351, 0.79358518, 0.79738557, 0.80111599, 0.80477772,
            0.80837204, 0.81190018, 0.81536336, 0.81876278, 0.82209961, 0.82537501,
            0.8285901, 0.831746, 0.83484379, 0.83788455, 0.84086932, 0.84379914,
            0.84667502, 0.84949795, 0.8522689, 0.85498884, 0.8576587, 0.8602794,
            0.86285186, 0.86537695, 0.86785555, 0.87028851, 0.87267668, 0.87502088,
            0.87732193, 0.8795806, 0.88179769, 0.88397396, 0.88611017, 0.88820704,
            0.8902653, 0.89228567, 0.89426885, 0.89621551, 0.89812632, 0.90000196,
            0.90184307, 0.90365027]

AU_DAILY_DEATHS = [1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 1, 0, 1, 0, 0, 0, 1, 3, 2, 0, 1, 2, 3, 1, 1,
                   2, 7, 4, 2, 6, 3, 5, 2, 2, 3, 4, 0, 0, 2, 0, 4, 2, 1, 1, 3, 0, 1, 4, 2, 2, 1, 4, 2, 2, 1, 0, 2, 0,
                   1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0]

AU_ALPHA_RAW = [1.03, 1.01, 1.12, 1.105, 1.105, 1.11, 1.1400000000000001, 1.055, 1.01, 1.125, 1.125, 1.12, 1.12, 1.155,
                1.075, 1.025, 1.08, 1.12, 1.105, 1.095, 1.125, 1.025, 0.99, 0.885, 1.095, 1.1, 1.095, 1.095, 0.965,
                0.9299999999999999, 1.025, 0.955, 0.92, 0.89, 0.89, 0.84, 0.77, 0.79, 0.6799999999999999, 0.635, 0.6,
                0.605, 0.6, 0.5449999999999999, 0.5449999999999999, 0.525, 0.515, 0.495, 0.515, 0.53, 0.51, 0.51, 0.5,
                0.5, 0.505, 0.20499999999999996, 0.48, 0.46499999999999997, 0.245, 0.485, 0.495, 0.495, 0.51, 0.575,
                0.54, 0.525, 0.525, 0.525, 0.525, 0.5449999999999999, 0.505, 0.565, 0.505, 0.5449999999999999, 0.54,
                0.53, 0.565, 0.61, 0.595, 0.505, 0.5700000000000001, 0.5700000000000001, 0.575, 0.605, 0.655, 0.65,
                0.6, 0.6, 0.605, 0.6, 0.615, 0.685, 0.655, 0.625, 0.62, 0.62, 0.61, 0.64, 0.6950000000000001, 0.65,
                0.64, 0.665, 0.6699999999999999, 0.675, 0.685]

AU_ALPHA = [0.99999407, 0.99999202, 0.99998927, 0.99998557, 0.99998059, 0.99997388,
            0.99996487, 0.99995274, 0.99993643, 0.99991449, 0.99988497, 0.99984527,
            0.99979187, 0.99972005, 0.99962347, 0.99949358, 0.99931894, 0.99908416,
            0.9987686,  0.9983446,  0.9977751,  0.99701061, 0.99598507, 0.99461068,
            0.99277116, 0.99031332, 0.98703689, 0.98268262, 0.97691951, 0.96933274,
            0.95941587, 0.94657281, 0.93013822, 0.90942724, 0.88382482, 0.85291842,
            0.81666102, 0.77552607, 0.73059231, 0.68349525, 0.64189905, 0.602619,
            0.56683198, 0.53572121, 0.50986208, 0.48928791, 0.47363772, 0.46232134,
            0.45465889, 0.44997768, 0.44766808, 0.4472082,  0.44816832, 0.4502043,
            0.45304595, 0.45648423, 0.46035914, 0.46454916, 0.4689626,  0.47353058,
            0.47820154, 0.48293702, 0.4877084,  0.49249444, 0.49727944, 0.50205179,
            0.506803,   0.51152683, 0.51621876, 0.52087556, 0.52549491, 0.53007522,
            0.53461539, 0.53911473, 0.54357283, 0.54798947, 0.55236463, 0.55669836,
            0.56099083, 0.56524224, 0.56945287, 0.57362299, 0.57775294, 0.58184304,
            0.58589363, 0.58990508, 0.59387773, 0.59781195, 0.60170809, 0.60556651,
            0.60938757, 0.61317163, 0.61691905, 0.62063016, 0.62430534, 0.62794491,
            0.63154923, 0.63511864, 0.63865346, 0.64215405, 0.64562072, 0.64905381,
            0.65245364, 0.65582054, 0.65915482, 0.6624568,  0.66572679, 0.6689651,
            0.67217204, 0.67534791, 0.67849302, 0.68160766, 0.68469212, 0.6877467,
            0.6907717,  0.69376738, 0.69673405, 0.69967197, 0.70258144, 0.70546272,
            0.70831608, 0.7111418,  0.71394015, 0.71671139, 0.71945579, 0.72217359,
            0.72486507, 0.72753047, 0.73017005, 0.73278406, 0.73537275, 0.73793636,
            0.74047513, 0.74298931, 0.74547913, 0.74794484, 0.75038665, 0.75280481,
            0.75519954, 0.75757108, 0.75991964, 0.76224544, 0.76454872, 0.76682968,
            0.76908855, 0.77132553, 0.77354084, 0.77573469, 0.77790729, 0.78005884,
            0.78218955, 0.78429961, 0.78638924, 0.78845862, 0.79050795, 0.79253743,
            0.79454725, 0.7965376,  0.79850866, 0.80046064, 0.8023937,  0.80430803,
            0.80620382, 0.80808125, 0.80994048, 0.81178171, 0.81360509, 0.81541082,
            0.81719905, 0.81896995, 0.82072371, 0.82246047, 0.8241804,  0.82588368,
            0.82757045, 0.82924088, 0.83089513, 0.83253335, 0.83415571, 0.83576234,
            0.83735342, 0.83892908, 0.84048947, 0.84203475, 0.84356505, 0.84508054,
            0.84658134, 0.8480676,  0.84953946, 0.85099707, 0.85244055, 0.85387005,
            0.8552857,  0.85668764, 0.858076,   0.8594509,  0.86081249, 0.86216089,
            0.86349622, 0.86481862, 0.8661282,  0.8674251,  0.86870944, 0.86998133,
            0.8712409,  0.87248827, 0.87372356, 0.87494687, 0.87615834, 0.87735807,
            0.87854618, 0.87972278, 0.88088798, 0.88204189, 0.88318463, 0.88431629,
            0.88543699, 0.88654683, 0.88764592, 0.88873437, 0.88981227, 0.89087972,
            0.89193684, 0.89298371, 0.89402045, 0.89504714, 0.89606388, 0.89707077,
            0.89806791, 0.89905539, 0.90003331, 0.90100175, 0.9019608,  0.90291057,
            0.90385114, 0.90478259, 0.90570502, 0.90661851]


@pytest.fixture(scope='session')
def reference_folder():
    """ Returns the path were the reference files for tests are stored in an OS independent way."""
    return os.path.join(MODULE_DIR, 'tests', 'reference_files')


@pytest.fixture(scope='session')
def mismatch_folder(reference_folder):
    """ Returns the path were mismatched versions of the data files are stored."""
    return os.path.join(reference_folder, 'mismatch_data')


def test_ons_uk(reference_folder, tmp_path):
    nottingham_covid_modelling.lib.data.SPLINE_FITS = tmp_path
    params = Params()
    data = DataLoader(True, params, 'United Kingdom', data_dir=reference_folder)

    assert params.N == 59.1e6
    assert data.country_display == 'England+Wales'
    assert data.daily_deaths == UK_DAILY_DEATHS
    assert data.google_data == GOOGLE_DATES
    assert np.allclose(np.array(params.alpha_raw), np.array(UK_ALPHA_RAW), rtol=1e-2, atol=1e-2)
    assert np.allclose(params.alpha, np.array(UK_ALPHA), rtol=1e-2, atol=1e-2)


def test_global_new_zealand(reference_folder, tmp_path):
    nottingham_covid_modelling.lib.data.SPLINE_FITS = tmp_path
    params = Params()
    with pytest.raises(AssertionError, match=r"Dates don't match up"):
        DataLoader(False, params, 'New Zealand', data_dir=reference_folder)


def test_global_australia(reference_folder, tmp_path):
    nottingham_covid_modelling.lib.data.SPLINE_FITS = tmp_path
    params = Params()
    data = DataLoader(False, params, 'Australia', data_dir=reference_folder)
    assert params.N == 25.0e6
    assert data.country_display == 'Australia'
    assert data.daily_deaths == AU_DAILY_DEATHS
    assert data.google_data == GOOGLE_DATES
    assert np.allclose(np.array(params.alpha_raw), np.array(AU_ALPHA_RAW), rtol=1e-2, atol=1e-2)
    assert np.allclose(params.alpha, np.array(AU_ALPHA), rtol=1e-2, atol=1e-2)


def test_ons_uk_mismatch(mismatch_folder, tmp_path):
    # Added extra data for UK
    nottingham_covid_modelling.lib.data.SPLINE_FITS = tmp_path
    params = Params()
    data = DataLoader(True, params, 'United Kingdom', data_dir=mismatch_folder)
    assert params.N == 59.1e6
    assert data.country_display == 'England+Wales'
    assert data.daily_deaths == UK_DAILY_DEATHS
    assert data.google_data == GOOGLE_DATES
    assert np.allclose(np.array(params.alpha_raw), np.array(UK_ALPHA_RAW), rtol=1e-2, atol=1e-2)
    assert np.allclose(params.alpha, np.array(UK_ALPHA), rtol=1e-2, atol=1e-2)


def test_global_new_zealand_mismatch(mismatch_folder, tmp_path):
    # Removed last row for New Zealand from owid data
    nottingham_covid_modelling.lib.data.SPLINE_FITS = tmp_path
    params = Params()
    with pytest.raises(AssertionError, match=r"Dates don't match up"):
        DataLoader(False, params, 'New Zealand', data_dir=mismatch_folder)


def test_global_australia_mismatch(mismatch_folder, tmp_path):
    # Added extra row for Australia from owid data
    nottingham_covid_modelling.lib.data.SPLINE_FITS = tmp_path
    params = Params()
    data = DataLoader(False, params, 'Australia', data_dir=mismatch_folder)
    assert params.N == 25.0e6
    assert data.country_display == 'Australia'
    assert data.daily_deaths == AU_DAILY_DEATHS
    assert data.google_data == GOOGLE_DATES
    assert np.allclose(np.array(params.alpha_raw), np.array(AU_ALPHA_RAW), rtol=1e-2, atol=1e-2)
    assert np.allclose(params.alpha, np.array(AU_ALPHA), rtol=1e-2, atol=1e-2)


def test_error_new_deaths_not_whole_number(mismatch_folder):
    # Test we get an error if the new_deaths are not a whole number added 0.1 to the start of France
    params = Params()
    with pytest.raises(AssertionError, match=r"Expecting new_deaths to be a whole number"):
        DataLoader(False, params, 'France', data_dir=mismatch_folder)


def test_error_new_deaths_not_number(mismatch_folder):
    # Test we get an error if the new_deaths are not a number at aall, added a string to the start of Spain
    params = Params()
    with pytest.raises(ValueError, match=r"could not convert string to float: 'bla'"):
        DataLoader(False, params, 'Spain', data_dir=mismatch_folder)


def test_ons_uk_current_data(tmp_path):
    # Test it still runs with current data
    nottingham_covid_modelling.lib.data.SPLINE_FITS = tmp_path
    params = Params()
    data = DataLoader(use_ons_data=True, parameters=params, country='United Kingdom')
    # assert params.N == 59.1e6
    # assert data.country_display == 'England+Wales'
    # assert os.path.isfile(os.path.join(tmp_path, 'spline_fits', 'Spline-fit-United-Kingdom-transit-False.png'))


def test_global_new_zealand_current_data(tmp_path):
    # Test it still runs with current data
    nottingham_covid_modelling.lib.data.SPLINE_FITS = tmp_path
    params = Params()
    data = DataLoader(False, params, 'New Zealand')
    assert params.N == 4.89e6
    assert data.country_display == 'New-Zealand'
    assert os.path.isfile(os.path.join(tmp_path, 'spline_fits', 'Spline-fit-New-Zealand-transit-True.png'))


def test_global_australia_current_data(tmp_path):
    # Test it still runs with current data
    nottingham_covid_modelling.lib.data.SPLINE_FITS = tmp_path
    params = Params()
    data = DataLoader(False, params, 'Australia')
    assert params.N == 25.0e6
    assert data.country_display == 'Australia'
    assert os.path.isfile(os.path.join(tmp_path, 'spline_fits', 'Spline-fit-Australia-transit-True.png'))
